---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { fetchAllPages, fetchPageBySlug } from "@/data/sanity/fetch";
import type { PageDetail, Section } from "@/data/sanity";
import Wrapper from "@/components/foundations/containers/Wrapper.astro"; // Import Wrapper

// Import all section components
import HeroHome from "@svelte_components/hero-home.svelte";
import Skills from "@svelte_components/skills.svelte";
import Hero1 from "@/components/headers/Hero1.astro";
import Hero2 from "@/components/headers/Hero2.astro";
import Feature1 from "@/components/features/Feature1.astro";
import CaseStudyListings from "@/components/case-studies/CaseStudyListings.astro";
import ContactForm from "@/components/forms/ContactForm.astro";

export async function getStaticPaths() {
  const pages = await fetchAllPages();

  // Exclude home slugs so the root-level index.astro handles "/"
  const HOME_SLUGS = new Set(["", "/", "home", "index", "root"]);

  const paths = pages
    .filter((p) => {
      const s = String(p?.slug ?? "");
      return !HOME_SLUGS.has(s);
    })
    .map((p) => ({ params: { slug: String(p.slug) } }));

  return paths;
}

const { slug } = Astro.params;

// For dynamic pages, fetch by slug
const pageSlug = String(slug);
const page: PageDetail | null = await fetchPageBySlug(pageSlug);

if (!page) {
  return Astro.redirect("/404");
}

// Map Sanity section types to Astro/Svelte components
const sectionComponents = {
  hero1: Hero1,
  hero2: Hero2,
  feature1: Feature1,
  caseStudyListings: CaseStudyListings,
  contactForm: ContactForm,
} as const;

---

<BaseLayout>
  {page.sections && page.sections.length > 0 ? (
    <>
      {page.sections.map((section: Section) => {
        // Explicit handling for Svelte sections to avoid dynamic hydrated imports
        if (section._type === "homeHeroSvelte") {
          return (
            <Wrapper variant="carousel">
              <HeroHome client:load />
            </Wrapper>
          );
        }
        if (section._type === "fruitLabelSkills") {
          return (
            <Wrapper variant="carousel">
              <Skills client:load />
            </Wrapper>
          );
        }

        // Explicitly render each Astro component with correct typing
        if (section._type === "hero1") {
          return <Hero1 feature={section as import("@/data/sanity").Hero} />;
        }
        if (section._type === "hero2") {
          return <Hero2 feature={section as import("@/data/sanity").Hero} />;
        }
        if (section._type === "feature1") {
          return <Feature1 feature={section as import("@/data/sanity").Feature1Section} />;
        }
        if (section._type === "caseStudyListings") {
          return (
            <CaseStudyListings
              section={section as import("@/data/sanity").CaseStudyListingsSection}
            />
          );
        }
        if (section._type === "contactForm") {
          return <ContactForm feature={section as import("@/data/sanity").ContactFormSection} />;
        }
        return null;
      })}
    </>
  ) : (
    <div class="wrapper py-16 text-center">
      <h1 class="text-4xl font-bold">No content found for this page.</h1>
      <p class="mt-4 text-lg">Please add sections in Sanity Studio.</p>
    </div>
  )}
</BaseLayout>