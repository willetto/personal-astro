---
// Assets
import { Image } from "astro:assets";
import LimeStripe from "@/components/assets/LimeStripeSvg.astro";
import LogoLink from "@/components/assets/LogoLink.astro";
// Foundations
import Link from "@/components/foundations/elements/Link.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
import { fetchSiteNavigation } from "@/data/sanity/fetch";
import type { NavItem } from "@/data/sanity";

const navigationLinks: NavItem[] = await fetchSiteNavigation();
---

<div id="nav-wrapper" class="mx-auto fixed top-0 w-full inset-x-0 z-5">
  <Wrapper id="second-wrapper" class="standard border-b brand-border-color">
    <div
      id="navigation-wrapper"
      class="relative flex flex-col md:items-center md:justify-between md:flex-row"
    >
      <div class="flex flex-row md:items-center justify-between">
        <LogoLink />

        <button
          id="menu-toggle"
          class="inline-flex items-center justify-center p-2 brand-text-color focus:outline-none md:hidden"
        >
          <svg
            class="size-6"
            stroke="currentColor"
            fill="none"
            viewBox="0 0 24 24"
          >
            <path
              id="menu-icon"
              class="inline-flex"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
            <path
              id="close-icon"
              class="hidden"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <nav
        id="navigation-menu"
        class="fixed inset-0 bg-stripes md:bg-none md:bg-transparent flex flex-col py-24 lg:p-0 h-full justify-between md:p-0 transform transition-all duration-300 ease-in-out opacity-0 -translate-y-4 pointer-events-none md:relative md:inset-auto md:opacity-100 md:pointer-events-auto md:translate-y-0"
      >
        <div
          class="mobile-menu-background absolute inset-0 pointer-events-none border-x brand-border-color mx-2 md:hidden"
        >
        </div>
        <LimeStripe class="absolute inset-0 size-full pointer-events-none scale-150 top-100 md:hidden" />
        <button
          id="menu-close"
          class="absolute top-4 right-4 md:hidden focus:outline-none brand-text-color"
          aria-label="Close menu"
        >
          <svg
            class="size-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        <div
          class="list-none md:ml-auto w-full flex flex-col h-full justify-start items-start px-8 md:px-0 md:flex-row md:items-center md:justify-center md:text-left gap-8 md:gap-4 relative"
        >
          <LogoLink class="md:hidden" />
          <div class="flex flex-col gap-4 md:flex-row items-start md:items-center">
            {
              navigationLinks.map((link) =>
                link.style === "primary" ? (
                  <Link
                    href={link.href}
                    size="sm"
                    variant="accent"
                    class="w-full md:w-auto"
                  >
                    {link.label}
                  </Link>
                ) : (
                  <a
                    href={link.href}
                    class="heading-text-color md:tracking-normal font-semibold md:font-medium text-3xl md:text-base"
                  >
                    {link.label}
                  </a>
                )
              )
            }
          </div>
        </div>
      </nav>
    </div>
  </Wrapper>
</div>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    function updateNavHeight() {
      const navWrapper = document.getElementById("nav-wrapper");
      if (navWrapper) {
        const height = navWrapper.offsetHeight;
        document.documentElement.style.setProperty("--nav-height", `${height}px`);
      }
    }

    const menuToggle = document.getElementById("menu-toggle");
    const menuClose = document.getElementById("menu-close");
    const menuIcon = document.getElementById("menu-icon");
    const closeIcon = document.getElementById("close-icon");
    const navigationMenu = document.getElementById("navigation-menu");
    // Initialize nav height variable
    updateNavHeight();
    window.addEventListener("resize", updateNavHeight);
    // Toggle mobile menu
    function toggleMenu(open) {
      console.log(`Toggling menu. Open: ${open}`); // Debug log to check the state of the toggle
      navigationMenu.classList.toggle("opacity-100", open);
      navigationMenu.classList.toggle("translate-y-0", open);
      navigationMenu.classList.toggle("pointer-events-auto", open);
      navigationMenu.classList.toggle("opacity-0", !open);
      navigationMenu.classList.toggle("-translate-y-4", !open);
      navigationMenu.classList.toggle("pointer-events-none", !open);
      menuIcon.classList.toggle("hidden", open);
      closeIcon.classList.toggle("hidden", !open);
    }

    // Event Listeners
    menuToggle.addEventListener("click", () => toggleMenu(true));
    menuClose.addEventListener("click", () => toggleMenu(false));
  });
</script>
<style>
#navigation-menu, .mobile-menu-background {
  background-color: light-dark(var(--color-tw-white)
  , var(--color-base-900));
}
#navigation-menu a:hover {
    color: var(--heading-text-color);
  }
</style>
