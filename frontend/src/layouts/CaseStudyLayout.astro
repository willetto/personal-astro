---
// Assets
import { Image } from "astro:assets";
// Foundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/foundations/elements/Text.astro";
import Link from "@/components/foundations/elements/Link.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
import PortableText from "@/components/foundations/elements/PortableText.astro";
import { sanityImageUrl } from "@/utils/sanity-image";
import SvelteComponentRenderer from "@/components/SvelteComponentRenderer.astro";
import Testimonial1 from "@/components/testimonials/Testimonial1.astro";
// Content
const { caseStudy } = Astro.props;
const featuredImageUrl = sanityImageUrl(caseStudy.featuredImage.asset._ref, 1200, 600);
---

<BaseLayout>
  <section>
    <Wrapper variant="standard">
      <div class="header-content">
        <div class="header-text">

          <Text
          tag="h1"
          variant="display2XL"
          data-aos="fade-up"
          data-aos-duration="1000"
          class="header-title font-semibold font-display brand-heading-color lg:text-balance uppercase"
          >
          {caseStudy.title}
        </Text>
        {caseStudy.description && (
          <Text
          tag="p"
          variant="textLG"
          data-aos="fade-up"
          data-aos-duration="1500"
          class="header-description mt-4 text-base brand-text-color max-w-2xl"
          >
          {caseStudy.description}
        </Text>
      )}
      </div>
        <Image
        width={1200}
        height={600}
        alt={caseStudy.featuredImage.alt}
        src={featuredImageUrl}
        class="header-image size-full object-cover object-center max-h-96 mt-4 rounded-2xl"
        />
      </div>

      <div class="mt-6 lg:mt-12 grid grid-cols-1 gap-8 lg:grid-cols-3 items-start">
        <div class="lg:col-span-2">
          <div class="max-w-none">
            <slot />
            
            {caseStudy.sections && caseStudy.sections.length > 0 && (
              <div class="space-y-8">
                {caseStudy.sections.map((section, index) => (
                  <div class={index > 0 ? "mt-8" : ""}>
                    {section._type === "textSection" && (
                      <div>
                        {section.title && (
                          <Text tag="h2" variant="displayMD" class="font-semibold brand-heading-color mb-4">
                            {section.title}
                          </Text>
                        )}
                        <div class="brand-text-color prose prose-lg max-w-none">
                          <PortableText value={section.content} />
                        </div>
                      </div>
                    )}
                    
                    {section._type === "imageSection" && (
                      <div>
                        <Image
                          width={800}
                          height={500}
                          alt={section.asset.altText || "Image"}
                          src={section.asset.url}
                          class="w-full h-auto object-cover rounded-lg"
                        />
                      </div>
                    )}
                    
                    {section._type === "testimonial1" && (
                      <div>
                        <Testimonial1 testimonial={section as import("@/data/sanity").Testimonial1Section} />
                      </div>
                    )}
                    
                    {section._type === "svelteComponent" && (
                      <div>
                        <SvelteComponentRenderer componentType={section.componentType} />
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}

            {caseStudy.galleryImages && caseStudy.galleryImages.length > 0 && (
              <div class="mt-12">
                <Text tag="h2" variant="displayMD" class="font-semibold brand-heading-color mb-6">
                  Gallery
                </Text>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {caseStudy.galleryImages.map((image) => (
                    <div>
                      <Image
                        width={600}
                        height={400}
                        alt={image.alt}
                        src={sanityImageUrl(image.asset._ref, 600, 400)}
                        class="w-full h-auto object-cover rounded-lg"
                      />
                      {image.caption && (
                        <Text tag="p" variant="textSM" class="mt-2 brand-text-color italic">
                          {image.caption}
                        </Text>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>

        <div class="space-y-6">
          {/* Project Details */}
          <div>
            <Text tag="h3" variant="textLG" class="font-semibold brand-heading-color mb-4">
              Project Details
            </Text>
            <div class="space-y-3">
              {caseStudy.clientName && (
                <div>
                  <Text tag="p" variant="textSM" class="font-medium brand-heading-color">
                    Client
                  </Text>
                  <Text tag="p" variant="textSM" class="brand-text-color">
                    {caseStudy.clientName}
                  </Text>
                </div>
              )}
              
              {caseStudy.projectDate && (
                <div>
                  <Text tag="p" variant="textSM" class="font-medium brand-heading-color">
                    Date
                  </Text>
                  <Text tag="p" variant="textSM" class="brand-text-color">
                    {new Date(caseStudy.projectDate).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "long",
                    })}
                  </Text>
                </div>
              )}

              {caseStudy.websiteUrl && (
                <div>
                  <Text tag="p" variant="textSM" class="font-medium brand-heading-color">
                    Website:
                  </Text>
                  <Link
                    href={caseStudy.websiteUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    variant="muted"
                    size="sm"
                    class="brand-text-color mt-4"
                  >
                    View Live Site
                  </Link>
                </div>
              )}

              {caseStudy.githubUrl && (
                <div>
                  <Text tag="p" variant="textSM" class="font-medium brand-heading-color">
                    Repository
                  </Text>
                  <Link
                    href={caseStudy.githubUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    variant="link"
                    size="sm"
                    class="brand-text-color"
                  >
                    View on GitHub
                  </Link>
                </div>
              )}
            </div>
          </div>

          {/* Technologies */}
          {caseStudy.technologies && caseStudy.technologies.length > 0 && (
            <div class="pt-6 border-t border-base-200">
              <Text tag="p" variant="textSM" class="brand-heading-color font-medium mb-3">
                Technologies:
              </Text>
              <div class="flex flex-wrap gap-2">
                {caseStudy.technologies.map((tech) => (
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-sm text-xs font-medium bg-teal-100 text-teal-900 border border-teal-500">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          )}

          {/* Tags */}
          {caseStudy.tags && caseStudy.tags.length > 0 && (
            <div class="pt-6 border-t border-base-200">
              <Text tag="p" variant="textSM" class="brand-heading-color font-medium mb-3">
                Tags:
              </Text>
              <div class="flex flex-wrap gap-2">
                {caseStudy.tags.map((tag) => (
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-base-100 brand-text-color border brand-border-color">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </Wrapper>
  </section>
</BaseLayout>
<style>
  
  @media (min-width: 1100px) {
  .header-content {
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 1rem;
    align-items: center;
  }
  .header-title {
    grid-column: 1;
  }
  .header-description {
    grid-column: 1;
  }
  .header-image {
    grid-column: 2;
    margin: 0;
  }
}

  .prose a:hover {
    color: var(--heading-text-color);
  }
</style>