---
// Assets
import { Image } from "astro:assets";
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/foundations/elements/Text.astro";
import Wrapper from "@/components/foundations/containers/Wrapper.astro";
// Icons
import User from "@/components/foundations/icons/User.astro";
const { frontmatter } = Astro.props;
---

<BaseLayout>
  <section>
    <Wrapper variant="standard" class="relative py-32 lg:pb-40 overflow-hidden">
      <div class="relative">
        <Text
          class="span"
          variant="textXS"
          data-aos="fade-down"
          data-aos-duration="1000"
          class="flex items-center font-medium uppercase text-base-600 gap-2"
        >
          <User size="sm" class="text-yellow-600" />
          Integrations
        </Text>
        <Text
          tag="h1"
          variant="displayXL"
          data-aos="fade-up"
          data-aos-duration="1000"
          class="font-semibold tracking-tighter text-base-800 lg:text-balance mt-8"
        >
          {frontmatter.customer}
        </Text>
        <Text
          tag="p"
          variant="textLG"
          data-aos="fade-up"
          data-aos-duration="1500"
          class="max-w-lg mt-4 font-medium text-base-800 md:text-balance"
        >
          {frontmatter.about}
        </Text>
      </div>
    </Wrapper>
  </section>
  <section>
    <Wrapper variant="standard" class="py-4 border-t">
      <div
        class="items-start grid grid-cols-1 gap-2 lg:grid-cols-3 -mt-20 lg:-mt-30 z-20"
      >
        {
          frontmatter.results.map((result, index) => (
            <div class="outline outline-base-200 relative overflow-hidden  group flex h-full flex-col  bg-white rounded-xl shadow-xl p-8   transition-all  hover:bg-gray-50 items-start">
              <div class="flex">
                <div class=" flex p-2 text-sm font-semibold bg-yellow-400 rounded-lg aspect-square size-8 items-center justify-center transition-all duration-300 text-base-800 group-hover:bg-base-800 group-hover:text-white">
                  {index + 1}
                </div>
              </div>
              <Text
                tag="p"
                variant="textBase"
                class="text-base-500 mt-12 lg:mt-24"
              >
                {result}
              </Text>
            </div>
          ))
        }
      </div>
    </Wrapper>
  </section>
  <section>
    <Wrapper variant="standard" class="py-12 border-t">
      <div class="flex flex-col text-center">
        <Text
          tag="h3"
          variant="textXL"
          data-aos="fade-up"
          data-aos-duration="1500"
          class="font-semibold text-base-800 md:text-balance max-w-xl mx-auto"
        >
          "{frontmatter.testimonial}"
        </Text>
        <Image
          width={500}
          height={500}
          src={frontmatter.avatar.url}
          alt={frontmatter.avatar.alt}
          data-aos="fade-up"
          data-aos-duration="2000"
          class="size-20 rounded-full mx-auto object-top object-cover mt-8"
        />
      </div>
    </Wrapper>
  </section>
  <section>
    <Wrapper variant="standard" class="py-12 border-t">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 items-start">
        <div>
          <div class="flex flex-col gap-4">
            {
              Object.entries(frontmatter.details).map(([key, value]) => (
                <div>
                  <Text
                    tag="h4"
                    variant="textBase"
                    class="text-base-800 font-medium"
                  >
                    {key}
                  </Text>
                  <Text
                    tag="p"
                    variant="textSM"
                    class="text-base-600 capitalize lg:text-balance"
                  >
                    {value}
                  </Text>
                </div>
              ))
            }
          </div>
          <dl class="flex flex-col gap-8 mt-4 pt-4 border-t border-base-200">
            {
              frontmatter.challengesAndSolutions.map((item) => (
                <div>
                  <dt>
                    <Text tag="h3" variant="textBase" class="font-medium">
                      {item.title}
                    </Text>
                  </dt>
                  <dd>
                    <Text
                      tag="p"
                      variant="textSM"
                      class="text-base-600 capitalize mt-2 "
                    >
                      {item.content}
                    </Text>
                  </dd>
                </div>
              ))
            }
          </dl>
        </div>
        <Wrapper variant="prose" class="lg:col-span-2"><slot /></Wrapper>
      </div>
    </Wrapper>
  </section>
</BaseLayout>
